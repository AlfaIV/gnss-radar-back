package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"fmt"

	"github.com/Gokert/gnss-radar/internal/delivery/graphql/generated"
	"github.com/Gokert/gnss-radar/internal/pkg/model"
	"github.com/Gokert/gnss-radar/internal/service"
)

// SatelliteName is the resolver for the satelliteName field.
func (r *taskResolver) SatelliteName(ctx context.Context, obj *model.Task) (string, error) {
	if obj == nil {
		return "", nil
	}

	satellites, err := r.gnssSevice.ListSatellites(ctx, service.ListSatellitesFilter{
		Ids: []string{obj.SatelliteID},
	})
	if err != nil {
		return "", fmt.Errorf("gnssSevice.ListSatellites: %w", err)
	}

	if len(satellites) == 0 {
		return "", nil
	}

	return satellites[0].SatelliteName, nil
}

// Task returns generated.TaskResolver implementation.
func (r *Resolver) Task() generated.TaskResolver { return &taskResolver{r} }

type taskResolver struct{ *Resolver }
